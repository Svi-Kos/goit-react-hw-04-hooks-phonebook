{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteItem","className","s","contactList","map","id","name","number","contactListItem","type","deleteBtn","onClick","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","contactForm","contactFormLabel","required","onChange","pattern","numberFormat","contactFormBtn","Component","Filter","filter","App","addContact","contact","shortid","generate","length","prevState","alert","deleteContact","contactId","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c7a7d3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2lgsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3oRTn\",\"contactFormLabel\":\"ContactForm_contactFormLabel__1sCzY\",\"contactFormBtn\":\"ContactForm_contactFormBtn__1n91K\",\"numberFormat\":\"ContactForm_numberFormat__2L_tt\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteItem }) => (\n  <ul className={s.contactList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.contactListItem}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.deleteBtn}\n          onClick={() => onDeleteItem(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport s from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const name = this.state.name;\n    const number = this.state.number;\n\n    this.props.onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.contactForm}>\n        <label className={s.contactFormLabel}>\n          Name\n          <input\n            type=\"text\"\n            required\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.contactFormLabel}>\n          Number\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            required\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n          <p className={s.numberFormat}>Format: xxx-xx-xx</p>\n        </label>\n        <button type=\"submit\" className={s.contactFormBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name{' '}\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactList from './components/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n// import contacts from 'contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const uniqName = this.state.contacts.filter(\n      contact => name === contact.name,\n    );\n\n    uniqName.length !== 1\n      ? this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }))\n      : alert(`${name} is already in contacts`);\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div className=\"phonebook\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteItem={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2YMxw\",\"contactListItem\":\"ContactList_contactListItem__kVbQn\",\"deleteBtn\":\"ContactList_deleteBtn__2Q1mI\"};"],"sourceRoot":""}